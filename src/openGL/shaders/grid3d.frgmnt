#version 330 core

layout (location = 0) out vec3 gPosition;
layout (location = 1) out vec3 gNormal;
layout (location = 2) out vec3 gAlbedo;
layout (location = 3) out vec2 gSpec;
layout (location = 4) out ivec4 gFlag;

in vec2 pos;

uniform float height;

#define MAX_HEIGHT 10000.
#define HEIGHT_COEF 20

const float FogDensity = 0.05;	
const vec4 fogColor = vec4(0.51, 0.473, 0.463, 1.0);

void main()
{
    vec2 coord = pos.xy * 16;// * max(1.0f, HEIGHT_COEF * height / MAX_HEIGHT); //height;//1.;




    // source: http://madebyevan.com/shaders/grid/
    // Compute anti-aliased world-space grid lines
    vec2 grid = abs(fract(coord - 0.5) - 0.5) / fwidth(coord);
	//grid.x *= 1.0f - height / MAX_HEIGHT;
	//grid.y *= 1.0f - height / MAX_HEIGHT;
    float line = min(grid.x, grid.y);
    line = 1 - clamp(line, 0, 1);
   
    vec3 bg_color = vec3(0.0f);//MAX_HEIGHT);
    vec3 l_color = vec3(0, 0, 1.);
    vec3 color = bg_color * (1 - line) + l_color * line;

	
    gPosition = vec3(pos.x, height, pos.y);
    gNormal = vec3(0,1,0);
    gAlbedo = color;
    gSpec.r = 1;
    gSpec.g = 0.8;
    
//    if (line > 0.5)
//        gFlag.r = 1;
//    else
//        gFlag.r = 0;
    gFlag.r = 1;
}
